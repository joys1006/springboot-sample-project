buildscript {
	ext {
		springBootVersion = '2.5.4'
		querydslVersion = '1.0.10'
	}
	repositories {
		maven { url "https://plugins.gradle.org/m2/" }
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:${querydslVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.ewerk.gradle.plugins.querydsl'

group = 'com.toy'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

configurations.all {
	resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.data:spring-data-commons'

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude module : 'junit'
	}
	testImplementation('org.junit.jupiter:junit-jupiter-api')
	testImplementation('org.junit.jupiter:junit-jupiter-params')
	testImplementation('org.junit.jupiter:junit-jupiter-engine')
	testImplementation('org.mockito:mockito-junit-jupiter')
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation('org.mock-server:mockserver-netty:5.7.2')
	testImplementation 'org.springframework.security:spring-security-test'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	runtimeOnly 'com.h2database:h2'
	implementation 'mysql:mysql-connector-java'

	implementation('io.springfox:springfox-swagger2:2.9.2')
	implementation('io.springfox:springfox-swagger-ui:2.9.2')
	implementation('com.google.guava:guava:20.0')

	implementation('io.jsonwebtoken:jjwt:0.9.1')

	implementation('org.modelmapper:modelmapper:2.3.0')

	annotationProcessor('org.springframework.boot:spring-boot-configuration-processor')

	implementation('com.querydsl:querydsl-core:4.0.1')
	implementation('com.querydsl:querydsl-apt:4.0.1')
	implementation('com.querydsl:querydsl-jpa:4.0.1')
	implementation('com.querydsl:querydsl-sql-spring:4.0.1')

	implementation('com.querydsl:querydsl-sql:4.2.1') {
		exclude group: 'com.querydsl', module: 'querydsl-sql'
	}

	implementation 'org.slf4j:slf4j-api'
	implementation 'org.slf4j:jcl-over-slf4j'
	implementation 'org.slf4j:log4j-over-slf4j'
	implementation 'org.slf4j:jul-to-slf4j'
	implementation 'ch.qos.logback:logback-classic'
	implementation 'org.codehaus.janino:janino'
}

test {
	useJUnitPlatform()
}

def querydslDir = 'src/main/generated'

querydsl {
	library = 'com.querydsl:querydsl-apt'
	jpa = true
	querydslSourcesDir = querydslDir
}

sourceSets {
	main {
		java {
			srcDirs 'src/main/java', querydslDir
		}
	}
}

compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}

configurations {
	querydsl.extendsFrom compileClasspath
}
